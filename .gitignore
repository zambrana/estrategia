// The Strategy design pattern. El patrón de diseño Estrategia
#include <iostream>
using namespace std;

class NameStrategy {
public:
  virtual void greet() = 0;
};

class SayHi : public NameStrategy {
public:
  void greet() {
    cout << "Hola , Como va ?" << endl;
  }
};

class Ignore : public NameStrategy {
public:
  void greet() {
    cout << "(Fingir que no te veo)" << endl;
  }
};

class Admission : public NameStrategy {
public:
  void greet() {
    cout << "Lo siento he olvidado su nombre" << endl;
  }
};

// The "Context" controls the strategy:(El contexto Controla la estrategia)
class Context {
  NameStrategy& strategy;
public:
  Context(NameStrategy& strat) : strategy(strat) {}
  void greet() { strategy.greet(); }
};

int main() {
  SayHi sayhi;
  Ignore ignore;
  Admission admission;
  Context c1(sayhi), c2(ignore), c3(admission);
  c1.greet();
  c2.greet();
  c3.greet();
} ///:~
